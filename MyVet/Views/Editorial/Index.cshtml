@using Common.Utils.Enums
@using static Common.Utils.Constant.Const
@{
    ViewData["Title"] = "Editoriales";
    var idRols = User.Claims.FirstOrDefault(x => x.Type == TypeClaims.IdRol).Value;
    bool isAdmin = idRols.Any(x => x.ToString() == Convert.ToInt32(Enums.Rol.Administrador).ToString());
    bool isEstand = idRols.Any(x => x.ToString() == Convert.ToInt32(Enums.Rol.Estandar).ToString());
}


<div class="row justify-content-center">
    <div class="text-center">
        <h1>Listado de Editoriales</h1>
    </div>
</div>
@if (isAdmin || isEstand)
{
    <div class="row mb-2">
        <button title="Nueva Editorial" class="btn btn-primary" onclick="nuevaEditorial()"><i class="fas fa-book"></i> Nueva Editorial</button>
    </div>
}

<div class="row">
    <table class="table">
        <thead class="thead-dark">
            <tr>
                <th scope="col">Editorial</th>
                <th scope="col">Sede</th>
                @if(isAdmin || isEstand) 
                {
                    <th scope="col">Opciones</th>
                }
            </tr>
        </thead>
        @* Cuerpo de la tabla *@
        <tbody id="cuerpoEditorial"></tbody>
    </table>

    <div class="modal fade" id="modalEditorial" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title font-weight-bold" id="idTituloModalEditorial"></h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form>
                        <div class="row">
                            <div class="col-md-6 form-group">
                                <label for="txtEditorial" class="col-form-label">Editorial</label>
                                <input placeholder="Ingrese un fecha" type="text" class="form-control" id="txtEditorial" required>
                            </div>

                            <div class="col-md-6 form-group">
                                <label for="txtSede" class="col-form-label">Sede</label>
                                <input placeholder="Ingrese un nombre" type="text" class="form-control" id="txtSede" required>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button title="Cancelar" type="button" class="btn btn-danger" data-dismiss="modal"><i class="far fa-window-close"></i> Cancelar</button>
                    <button title="Guardar" type="button" class="btn btn-success" onclick="guardarEditorial()"><i class="far fa-save"></i> Guardar</button>
                </div>
            </div>
        </div>
    </div>
    <!--end modal-->
</div>

@section Scripts{

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
<script type="text/javascript" charset="utf-8">

    var listEditorial = [];

    let idEditorial = '';

    $(document).ready(function () {
        getAllEditorial();
    });

    function getAllEditorial() {
        modalProcesando(true);
            $.ajax({
                url: '@Url.Action("GetAllEditorial", "Editorial")',
                method: 'GET',
                dataType: "json",
                success: function (data) {
                    modalProcesando(false);
                    listEditorial = data.result;
                    cargarGridEditorial(listEditorial);
                },
                error: function (xhr, textStatus, errorThrown) {
                        modalProcesando(false);
                        console.error(xhr, textStatus, errorThrown);
                    }
            });
    }

    function cargarGridEditorial(data) {
        $("#cuerpoEditorial").html("");
        for (i = 0; i < data.length; i++) {
            var tr = `
                <tr>
                    <td>`+ data[i].editorial + `</td>
                    <td>`+ data[i].sede + `</td>

                @if (isAdmin || isEstand) {
                    <td>
                        <button title="Editar" class="btn btn-warning" onclick="editarEditorial(`+ data[i].idEditorial + `)"><i class="fas fa-edit"></i><em> Editar</em></button>
                        <button title="Eliminar" class="btn btn-danger" onclick="eliminarEditorial(`+ data[i].idEditorial + `)"><i class="far fa-trash-alt"></i><em> Eliminar</em></button>
                    </td>
                }
                </tr>
            `;
            $("#cuerpoEditorial").append(tr);
        }
    }

    function guardarEditorial() {

        if (validarForm()) {

            let parametro = {
                Editorial: $("#txtEditorial").val(),
                Sede: $("#txtSede").val(),
            }
            if (idEditorial == '') {
                modalProcesando(true);
                $.ajax({
                    url: '@Url.Action("InsertEditorial", "Editorial")',
                    method: 'POST',
                    dataType: "json",
                    data: parametro,
                    success: function (data) {
                        modalProcesando(false);
                        if (data) {
                            $('#modalEditorial').modal('hide');
                            toastMessage('success', 'Editorial guardado Exitosamente!');
                            getAllEditorial();
                            limpiarForm();
                        } else {
                            toastMessage('error', 'Hubo un error al guardar, por favor intentarlo nuevamente!');
                        }
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        modalProcesando(false);
                        toastMessage('error', 'Hubo un error al guardar, por favor intentarlo nuevamente!');
                        console.error(xhr, textStatus, errorThrown);
                    }
                });
            } else {
                parametro.idEditorial = idEditorial;
                modalProcesando(true);
                $.ajax({
                    url: '@Url.Action("UpdateEditorial", "Editorial")',
                    method: 'PUT',
                    data: parametro,
                    dataType: "json",
                    success: function (data) {
                        modalProcesando(false);

                        if (data) {
                            $('#modalEditorial').modal('hide'); //=>hide: Ocultar
                            limpiarForm();
                            toastMessage('success', 'Editorial actualizada exitosamente!');
                            getAllEditorial();
                        } else {
                            toastMessage('error', 'Hubo un error al guardar, por favor intentarlo nuevamente!');
                        }
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        modalProcesando(false);
                        toastMessage('error', 'Hubo un error al guardar, por favor intentarlo nuevamente!');
                        console.error(xhr, textStatus, errorThrown);
                    }
                });
            }
        }
}

    function validarForm() {


        if ($("#txtEditorial").val() == '') {
            $("#txtEditorial").focus();
            toastMessage('warning', 'La editorial es obligatoria!');
            return false;
        }

        if ($("#txtSede").val() == '') {
            $("#txtSede").focus();
            toastMessage('warning', 'La sede es obligatoria!');
            return false;
        }

        return true;
    }

    function limpiarForm() {
        $("#txtEditorial").val('');
        $("#txtSede").val('');
        idEditorial = '';
    }

    function nuevaEditorial() {

        $('#idTituloModalEditorial').html("Ingresar Nueva Editorial");
        $('#modalEditorial').modal({ keyboard: true });
        limpiarForm();
    }

    function editarEditorial(id) {
        idEditorial = id;
        let edit = listEditorial.find(x => x.idEditorial == idEditorial);
        $('#txtEditorial').val(edit.editorial);
        $('#txtSede').val(edit.sede);

        $('#idTituloModalEditorial').html("Editar Editorial");
        $('#modalEditorial').modal({ keyboard: true });
    }

    function eliminarEditorial(idEdit) {
        console.log("mándo a eliminar", idEdit);

                Swal.fire({
                    title: 'Desea eliminar el elemento?',
                    text: "No podrás revertir esto!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Si, eliminar!',
                    cancelButtonText: 'Cancerlar'
                }).then((result) => {
                    if (result.isConfirmed) {
                        modalProcesando(true);
                        $.ajax({
                            url: '@Url.Action("DeleteEditorial", "Editorial")',
                            method: 'DELETE',
                            data: {
                                idEdit: idEdit
                            },
                            dataType: "json",
                            success: function (data) {
                                modalProcesando(false);
                                if (data.isSuccess) {
                                    listEditorial = listEditorial.filter(x => x.idEditorial != idEdit);
                                    cargarGridEditorial(listEditorial);
                                    Swal.fire(
                                        'Eliminado!',
                                        data.message,
                                        'success'
                                    );
                                } else {
                                    Swal.fire(
                                        'Error!',
                                        data.message,
                                        'error'
                                    );
                                }
                            },
                            error: function (xhr, textStatus, errorThrown) {
                                modalProcesando(false);
                                console.error(xhr, textStatus, errorThrown);
                            }
                        });
                    }
                });
        }

</script>
}

