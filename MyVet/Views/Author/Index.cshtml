@{
    ViewData["Title"] = "Autores";
}


<div class="row justify-content-center">
    <div class="text-center">
        <h1>Listado de Autores</h1>
    </div>
</div>
<div class="row mb-2">
    <button title="Nuevo Autor" class="btn btn-primary" onclick="nuevoAutor()"><i class="fas fa-user-alt"></i> Nuevo Autor</button>
</div>
<div class="row">
    <table class="table">
        <thead class="thead-dark">
            <tr>
                <th scope="col">Nombre</th>
                <th scope="col">Apellido</th>
                <th scope="col">Opciones</th>
            </tr>
        </thead>
        @* Cuerpo de la tabla *@
        <tbody id="cuerpoAutores"></tbody>
    </table>

    <div class="modal fade" id="modalAutor" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title font-weight-bold" id="idTituloModalAutor"></h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form>
                        <div class="row">
                            <div class="col-md-6 form-group">
                                <label for="txtNombre" class="col-form-label">Nombre</label>
                                <input placeholder="Ingrese un fecha" type="text" class="form-control" id="txtNombre" required>
                            </div>

                            <div class="col-md-6 form-group">
                                <label for="txtApellido" class="col-form-label">Apellido</label>
                                <input placeholder="Ingrese un nombre" type="text" class="form-control" id="txtApellido" required>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button title="Cancelar" type="button" class="btn btn-danger" data-dismiss="modal"><i class="far fa-window-close"></i> Cancelar</button>
                    <button title="Guardar" type="button" class="btn btn-success" onclick="guardarAuthors()"><i class="far fa-save"></i> Guardar</button>
                </div>
            </div>
        </div>
    </div>
    <!--end modal-->
</div>

@section Scripts{

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script type="text/javascript" charset="utf-8">

    var listAuthors = [];

    let idAuthor = '';

    $(document).ready(function () {
        getAllAuthors();
    });

    function getAllAuthors() {
        modalProcesando(true);
            $.ajax({
                url: '@Url.Action("GetAllAuthors", "Author")',
                method: 'GET',
                dataType: "json",
                success: function (data) {
                    modalProcesando(false);
                    listAuthors = data;
                    console.log(listAuthors);
                    cargarGridAuthors(listAuthors);
                },
                error: function (xhr, textStatus, errorThrown) {
                        modalProcesando(false);
                        console.error(xhr, textStatus, errorThrown);
                    }
            });
    }

    function cargarGridAuthors(data) {
        $("#cuerpoAutores").html("");
        for (i = 0; i < data.result.length; i++) {
            var tr = `
                <tr>
                    <td>`+ data.result[i].nameAuthor + `</td>
                    <td>`+ data.result[i].lastNameAuthor + `</td>
                    <td>
                        <button title="Editar" class="btn btn-warning" onclick="editarAutor(`+ data.result[i].idAuthor + `)"><i class="fas fa-edit"></i><em> Editar</em></button>
                        <button title="Eliminar" class="btn btn-danger" onclick="eliminarAutor(`+ data.result[i].idAuthor + `)"><i class="far fa-trash-alt"></i><em> Eliminar</em></button>
                    </td>
                </tr>
            `;
            $("#cuerpoAutores").append(tr);
        }
    }

    function guardarAuthors() {

        if (validarForm()) {

            let parametro = {
                NameAuthor: $("#txtNombre").val(),
                LastNameAuthor: $("#txtApellido").val(),
            }
            if (idAuthor == '') {
                modalProcesando(true);
                $.ajax({
                    url: '@Url.Action("InsertAuthors", "Author")',
                    method: 'POST',
                    dataType: "json",
                    data: parametro,
                    success: function (data) {
                        modalProcesando(false);
                        if (data) {
                            $('#modalAutor').modal('hide');
                            toastMessage('success', 'Autor guardado Exitosamente!');
                            getAllAuthors();
                            limpiarForm();
                        } else {
                            toastMessage('error', 'Hubo un error al guardar, por favor intentarlo nuevamente!');
                        }
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        modalProcesando(false);
                        toastMessage('error', 'Hubo un error al guardar, por favor intentarlo nuevamente!');
                        console.error(xhr, textStatus, errorThrown);
                    }
                });
            } else {
                parametro.idAuthor = idAuthor;
                modalProcesando(true);
                $.ajax({
                    url: '@Url.Action("UpdateAuthors", "Author")',
                    method: 'PUT',
                    data: parametro,
                    dataType: "json",
                    success: function (data) {
                        modalProcesando(false);
                        if (data) {
                            $('#modalAutor').modal('hide'); //=>hide: Ocultar
                            limpiarForm();
                            toastMessage('success', 'Autor actualizado exitosamente!');
                            getAllAuthors();
                        } else {
                            toastMessage('error', 'Hubo un error al guardar, por favor intentarlo nuevamente!');
                        }
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        modalProcesando(false);
                        toastMessage('error', 'Hubo un error al guardar, por favor intentarlo nuevamente!');
                        console.error(xhr, textStatus, errorThrown);
                    }
                });
            }
        }
}

    function validarForm() {


        if ($("#txtNombre").val() == '') {
            $("#txtNombre").focus();
            toastMessage('warning', 'El nombre es obligatorio!');
            return false;
        }

        if ($("#txtApellido").val() == '') {
            $("#txtApellido").focus();
            toastMessage('warning', 'El apellido es obligatorio!');
            return false;
        }

        return true;
    }

    function limpiarForm() {
        $("#txtEditorial").val('');
        $("#txtSede").val('');
        idEditorial = '';
    }

    function nuevoAutor() {

        $('#idTituloModalAutor').html("Ingresar Nuevo Autor");
        $('#modalAutor').modal({ keyboard: true });
        limpiarForm();
    }

    function editarAutor(id) {
        idAuthor = id;
        let autor = listAuthors.result.find(x => x.idAuthor == idAuthor);
        $('#txtNombre').val(autor.nameAuthor);
        $('#txtApellido').val(autor.lastNameAuthor);

        $('#idTituloModalAutor').html("Editar Autor");
        $('#modalAutor').modal({ keyboard: true });
    }

    function eliminarAutor(idAuthor) {
        console.log("mándo a eliminar", idAuthor);

            Swal.fire({
                title: 'Desea eliminar el elemento?',
                text: "No podrás revertir esto!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Si, eliminar!',
                cancelButtonText: 'Cancerlar'
            }).then((result) => {
                if (result.isConfirmed) {
                    modalProcesando(true);
                    $.ajax({
                        url: '@Url.Action("DeleteAuthors", "Author")',
                        method: 'DELETE',
                        data: {
                            idAuthor: idAuthor
                        },
                        dataType: "json",
                        success: function (data) {
                            modalProcesando(false);
                            if (data.isSuccess) {
                                getAllAuthors();
                                Swal.fire(
                                    'Eliminado!',
                                    data.message,
                                    'success'
                                );
                            } else {
                                Swal.fire(
                                    'Error!',
                                    data.message,
                                    'error'
                                );
                            }
                        },
                        error: function (xhr, textStatus, errorThrown) {
                            modalProcesando(false);
                            console.error(xhr, textStatus, errorThrown);
                        }
                    });
                }
            });
    }

    </script>
}
